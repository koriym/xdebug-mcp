{
    "name": "koriym/xdebug-mcp",
    "description": "Universal PHP Xdebug MCP Server with AI-optimized debugging support",
    "type": "library",
    "keywords": ["xdebug", "debugging", "php", "mcp", "ai", "trace", "profiling"],
    "homepage": "https://koriym.github.io/xdebug-mcp/",
    "license": "MIT",
    "require": {
        "php": "^8.1",
        "ext-sockets": "*",
        "ext-xml": "*",
        "symfony/polyfill-php83": "^1.33",
        "amphp/socket": "^2.3"
    },
    "require-dev": {
        "phpunit/phpunit": "^10.0",
        "vimeo/psalm": "^6.13",
        "doctrine/coding-standard": "^13.0",
        "justinrainbow/json-schema": "^6.4"
    },
    "autoload": {
        "psr-4": {
            "Koriym\\XdebugMcp\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Koriym\\XdebugMcp\\Tests\\": "tests/"
        }
    },
    "bin": [
        "bin/xdebug-mcp",
        "bin/xdebug-server",
        "bin/xdebug-trace",
        "bin/xdebug-profile",
        "bin/xdebug-coverage",
        "bin/xdebug-debug",
        "bin/test-json"
    ],

    "scripts-descriptions": {
        "test-json": "Run comprehensive JSON test suite with all xdebug commands",
        "install-mcp": "Configure xdebug-mcp for Claude Code MCP integration",
        "install-desktop": "Configure xdebug-mcp for Claude Desktop integration",
        "check-env": "Check Xdebug environment and configuration"
    },
    "scripts": {
        "test": "phpunit",
        "coverage": "php -dzend_extension=xdebug.so -dxdebug.mode=coverage ./vendor/bin/phpunit --coverage-text --coverage-html=build/coverage",
        "phpdbg": "phpdbg -qrr ./vendor/bin/phpunit --coverage-text --coverage-html ./build/coverage --coverage-clover=build/coverage.xml",
        "pcov": "php -dextension=pcov.so -d pcov.enabled=1 ./vendor/bin/phpunit --coverage-text --coverage-html=build/coverage --coverage-clover=build/coverage.xml",
        "cs": "phpcs",
        "cs-fix": "phpcbf src tests",
        "psalm": "psalm --show-info=false",
        "baseline": "psalm --set-baseline=psalm-baseline.xml",
        "clean": [
            "psalm --clear-cache"
        ],
        "sa": [
            "@psalm"
        ],
        "test-json": "./bin/test-json",
        "install-mcp": "./bin/check-env --install-mcp",
        "install-desktop": "./bin/check-env --install-desktop",
        "check-env": "./bin/check-env",
        "tests": [
            "@cs",
            "@sa",
            "@test"
        ],
        "build": [
            "@clean",
            "@cs",
            "@sa",
            "@coverage"
        ]
    },
    "config": {
        "allow-plugins": {
            "dealerdirect/phpcodesniffer-composer-installer": true
        }
    }
}
