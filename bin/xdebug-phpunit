#!/usr/bin/env php
<?php

declare(strict_types=1);

// Find the project root (where composer.json is located)
$projectRoot = __DIR__ . '/..';
if (!file_exists($projectRoot . '/composer.json')) {
    // If running from vendor/bin, go up more levels
    $projectRoot = dirname(dirname(dirname(__DIR__)));
    if (!file_exists($projectRoot . '/composer.json')) {
        fwrite(STDERR, "Error: Could not find project root (composer.json not found)\n");
        exit(1);
    }
}

// Load autoloader
$autoloadPaths = [
    $projectRoot . '/vendor/autoload.php',
    __DIR__ . '/../vendor/autoload.php',
    __DIR__ . '/../../../autoload.php', // When installed via composer
];

$autoloaderFound = false;
foreach ($autoloadPaths as $autoloadPath) {
    if (file_exists($autoloadPath)) {
        require_once $autoloadPath;
        $autoloaderFound = true;
        break;
    }
}

if (!$autoloaderFound) {
    fwrite(STDERR, "Error: Composer autoloader not found. Run 'composer install' first.\n");
    exit(1);
}

// Change to project root directory
chdir($projectRoot);

// Run the command
use Koriym\XdebugMcp\XdebugPhpunitCommand;

$command = new XdebugPhpunitCommand($projectRoot);
$exitCode = $command->run($argv);

exit($exitCode);