#!/usr/bin/env php
<?php
/**
 * Xdebug Debug Session Starter
 * Starts a PHP script with Xdebug debugging enabled and waits for debugger connection
 */

if ($argc < 2) {
    echo "Usage: ./bin/xdebug-debug <php-file>\n";
    echo "Example: ./bin/xdebug-debug test-scripts/buggy_calculation_code.php\n";
    exit(1);
}

$scriptPath = $argv[1];

if (!file_exists($scriptPath)) {
    echo "Error: File '$scriptPath' not found.\n";
    exit(1);
}

echo "🐛 Starting Xdebug debugging session...\n";
echo "📁 Target script: $scriptPath\n";
echo "🔌 Xdebug will listen on 127.0.0.1:9004\n";
echo "🎯 MCP tools can connect to debug this session\n\n";

// Clean up any existing debug sessions for this script
// Optional cleanup (disabled by default). Enable with --clean before the script path.
$doClean = false;
$args    = $argv;
array_shift($args); // drop program name
if (! empty($args) && $args[0] === '--clean') {
    $doClean = true;
    array_shift($args);
    $scriptPath = $args[0] ?? $scriptPath;
}

if ($doClean) {
    echo "🧹 Cleaning up existing debug sessions for: $scriptPath\n";
    $pattern = sprintf(
        'xdebug.*mode=debug.*%s',
        preg_quote($scriptPath, '/')
    );
    $cmd = sprintf(
        'pkill -f %s 2>/dev/null',
        escapeshellarg($pattern)
    );
    @exec($cmd);
    usleep(500000); // Wait 0.5s for cleanup
}
// Start PHP script with Xdebug debugging - BREAKS AT FIRST LINE
$command = sprintf(
    'XDEBUG_SESSION=1 php -dzend_extension=xdebug -dxdebug.mode=debug -dxdebug.client_host=127.0.0.1 -dxdebug.client_port=9004 -dxdebug.start_with_request=yes %s',
    escapeshellarg($scriptPath)
);

echo "🔄 Starting script - will BREAK AT FIRST LINE\n";
echo "🚀 Command: $command\n";
echo "════════════════════════════════════════\n\n";

// Start process in foreground for proper Xdebug connection
echo "Starting PHP script with Xdebug (will pause at first line)...\n";
echo "Use Ctrl+C to stop if needed.\n\n";
system($command);