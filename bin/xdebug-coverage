#!/bin/bash

# Xdebug Coverage Testing Script
cd "$(dirname "$0")/.."
PROJECT_ROOT=$(pwd)

# Check for help flag or missing argument
if [ "$1" = "--help" ] || [ "$1" = "-h" ] || [ -z "$1" ]; then
    echo "Usage: $0 PHP_FILE [OPTIONS]"
    echo ""
    echo "Runs Xdebug code coverage analysis on the specified PHP file."
    echo ""
    echo "Arguments:"
    echo "  PHP_FILE    Path to PHP file to analyze (required)"
    echo ""
    echo "Options:"
    echo "  --html      Generate HTML coverage report"
    echo "  --text      Generate text coverage summary (default)"
    echo ""
    echo "Examples:"
    echo "  $0 test/debug_test.php           # Basic coverage analysis"
    echo "  $0 my_script.php --html          # Generate HTML report"
    echo "  $0 tests/Unit/SomeTest.php       # Coverage for test file"
    echo ""
    if [ -z "$1" ]; then
        echo "❌ Error: PHP file argument is required"
        exit 1
    fi
    exit 0
fi

# Parse arguments
TARGET_FILE="$1"
OUTPUT_FORMAT="text"

# Check for output format option
if [ "$2" = "--html" ]; then
    OUTPUT_FORMAT="html"
elif [ "$2" = "--text" ]; then
    OUTPUT_FORMAT="text"
fi

# Check target file exists
if [ ! -f "$TARGET_FILE" ]; then
    echo "❌ Error: File '$TARGET_FILE' not found"
    echo "Use '$0 --help' for usage information"
    exit 1
fi

# Generate unique coverage filename
COVERAGE_TIMESTAMP=$(date +%Y%m%d_%H%M%S)
COVERAGE_DIR="/tmp/xdebug_coverage_${COVERAGE_TIMESTAMP}"

# Create coverage directory
mkdir -p "$COVERAGE_DIR"

# Xdebug coverage configuration
XDEBUG_OPTS="-dzend_extension=xdebug \
    -dxdebug.mode=coverage \
    -dxdebug.start_with_request=yes"

echo "📊 Coverage Analysis: $TARGET_FILE"
echo "📁 Output format: $OUTPUT_FORMAT"

# Create a simple coverage wrapper script
WRAPPER_SCRIPT="/tmp/coverage_wrapper_${COVERAGE_TIMESTAMP}.php"
cat > "$WRAPPER_SCRIPT" << EOF
<?php
// Coverage analysis wrapper
xdebug_start_code_coverage(XDEBUG_CC_UNUSED | XDEBUG_CC_DEAD_CODE);

// Include and execute the target file
include '$TARGET_FILE';

// Get coverage data
\$coverage = xdebug_get_code_coverage();
xdebug_stop_code_coverage();

// Generate report based on format
if ('$OUTPUT_FORMAT' === 'html') {
    \$htmlDir = '$COVERAGE_DIR/html';
    mkdir(\$htmlDir, 0755, true);
    
    foreach (\$coverage as \$file => \$lines) {
        \$filename = basename(\$file);
        \$htmlFile = \$htmlDir . '/' . \$filename . '.html';
        
        \$html = "<html><head><title>Coverage: \$filename</title></head><body>";
        \$html .= "<h1>Coverage Report: \$filename</h1>";
        \$html .= "<table border='1'><tr><th>Line</th><th>Status</th></tr>";
        
        \$fileLines = file(\$file);
        foreach (\$fileLines as \$lineNum => \$line) {
            \$lineNum++; // 1-based line numbers
            \$status = 'not executable';
            if (isset(\$lines[\$lineNum])) {
                \$status = \$lines[\$lineNum] === 1 ? 'covered' : 'not covered';
            }
            \$color = \$status === 'covered' ? 'green' : (\$status === 'not covered' ? 'red' : 'gray');
            \$html .= "<tr style='background-color: \$color'>";
            \$html .= "<td>\$lineNum</td><td>\$status</td></tr>";
        }
        \$html .= "</table></body></html>";
        
        file_put_contents(\$htmlFile, \$html);
    }
    
    echo "✅ HTML coverage report generated in: \$htmlDir\n";
    echo "📂 Open: \$htmlDir/index.html\n";
} else {
    // Text format
    \$totalLines = 0;
    \$coveredLines = 0;
    
    foreach (\$coverage as \$file => \$lines) {
        echo "File: \$file\n";
        foreach (\$lines as \$line => \$count) {
            \$totalLines++;
            if (\$count > 0) \$coveredLines++;
            \$status = \$count > 0 ? 'COVERED' : 'NOT COVERED';
            echo "  Line \$line: \$status (\$count)\n";
        }
        echo "\n";
    }
    
    \$percentage = \$totalLines > 0 ? (\$coveredLines / \$totalLines) * 100 : 0;
    echo "📊 Coverage Summary:\n";
    echo "   Total lines: \$totalLines\n";
    echo "   Covered lines: \$coveredLines\n";
    echo "   Coverage: " . number_format(\$percentage, 2) . "%\n";
}
EOF

# Execute with coverage
php $XDEBUG_OPTS "$WRAPPER_SCRIPT"

# Cleanup wrapper script
rm -f "$WRAPPER_SCRIPT"

echo ""
echo "✅ Coverage analysis complete!"

if [ "$OUTPUT_FORMAT" = "html" ]; then
    echo "💡 View HTML report:"
    echo "   open $COVERAGE_DIR/html/"
else
    echo "💡 Coverage data saved to: $COVERAGE_DIR"
fi