#!/usr/bin/env php
<?php

// Create shutdown script for coverage collection
$shutdownScript = tempnam(sys_get_temp_dir(), 'coverage_end_');
file_put_contents($shutdownScript, '<?php
$tempDir = sys_get_temp_dir();
xdebug_set_filter(XDEBUG_FILTER_CODE_COVERAGE, XDEBUG_PATH_EXCLUDE, [getcwd() . "/vendor/", getcwd() . "/tests/", $tempDir]);
xdebug_start_code_coverage();
register_shutdown_function(function() use ($tempDir) {
    $coverage = xdebug_get_code_coverage();
    // Remove temp files from coverage
    $filtered = array_filter($coverage, function($path) use ($tempDir) {
        return strpos($path, $tempDir) === false;
    }, ARRAY_FILTER_USE_KEY);
    $result = ["\$schema" => "https://koriym.github.io/xdebug-mcp/schemas/xdebug-coverage.json", "coverage" => $filtered];
    echo(json_encode($result, JSON_UNESCAPED_SLASHES));
});
');

// Parse arguments - handle -- separator for complex commands
$args = array_slice($argv, 1);
if (in_array('--', $args)) {
    $separatorIndex = array_search('--', $args);
    $args = array_slice($args, $separatorIndex + 1);
}

// Use PHP_BINARY constant instead of which php
$phpPath = PHP_BINARY;

// Check if Xdebug is already loaded
$xdebugFlag = '';
if (!extension_loaded('xdebug')) {
    $xdebugFlag = ' -dzend_extension=xdebug';
}

// Properly escape all arguments and prepend file path
$escapedArgs = array_map('escapeshellarg', $args);
$escapedPrependFile = escapeshellarg($shutdownScript);

// Execute PHP script with coverage enabled
$cmd = escapeshellarg($phpPath) . $xdebugFlag . ' -dxdebug.mode=coverage -dauto_prepend_file=' . $escapedPrependFile . ' ' . implode(' ', $escapedArgs) . ' </dev/null 2>/dev/null';
$output = shell_exec($cmd);

// Extract only JSON from output (filter out script output)
$lines = explode("\n", $output ?: '');
foreach ($lines as $line) {
    $line = trim($line);
    if ($line && (str_starts_with($line, '{"') || str_contains($line, '"$schema"'))) {
        echo $line . "\n";
        break;
    }
}

// Clean up temporary file
unlink($shutdownScript);
